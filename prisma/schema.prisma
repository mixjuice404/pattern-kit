generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email                    String    @unique
  name                     String?
  password                 String
  bio                      String?
  status                   Int       @db.SmallInt
  id                       Int       @id @default(autoincrement())
  avatar_url               String?   @map("avatar_url")
  created_at               DateTime  @default(now()) @map("created_at")
  last_login_at            DateTime? @map("last_login_at")
  updated_at               DateTime  @updatedAt @map("updated_at")
  is_root                  Boolean   @default(false) @map("is_root")
  mobile                   String?   @unique
  refresh_token            String?   @map("refresh_token")
  last_ip                  String?   @map("last_ip")
  refresh_token_expires_at DateTime? @map("refresh_token_expires_at")
  user_id                  String    @unique @default(cuid())
  deleted                  BigInt    @default(0)
  version                  Int       @default(1)

  @@map("users")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  created_at  DateTime @default(now()) @map("created_at")
  updated_at  DateTime @updatedAt @map("updated_at")
  deleted     BigInt   @default(0)
  version     Int      @default(1)

  @@map("roles")
}

model UserRoleRelation {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  roleId     Int      @map("role_id")
  assignedAt DateTime @default(now()) @map("assigned_at")
  created_at DateTime @default(now()) @map("created_at")
  deleted    BigInt   @default(0)
  updated_at DateTime @updatedAt @map("updated_at")
  version    Int      @default(1)

  @@map("user_role_relation")
}

model Permission {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  group       String?
  created_at  DateTime @default(now()) @map("created_at")
  updated_at  DateTime @updatedAt @map("updated_at")
  deleted     BigInt   @default(0)
  version     Int      @default(1)

  @@map("permissions")
}

model CrochetPattern {
  id           Int      @id @default(autoincrement())
  title        String   @unique
  cover_image  String?
  description  String?
  pattern_json Json?
  version      Int      @default(1)
  created_at   DateTime @default(now()) @map("created_at")
  updated_at   DateTime @updatedAt @map("updated_at")
  deleted      BigInt   @default(0)

  @@map("crochet_pattern")
}

// 增加一个 管理 prompt 模板的表
model PromptTemplate {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  alias       String   @default("")
  template    String
  description String?
  version     Int      @default(1)
  created_at  DateTime @default(now()) @map("created_at")
  updated_at  DateTime @updatedAt @map("updated_at")
  deleted     BigInt   @default(0)

  @@map("prompt_template")
}